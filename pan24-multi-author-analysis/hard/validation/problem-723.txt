No matter how much packet analysis and systems probing you can never know for sure if it's truly encrypted, the data isnt still available in memory somewhere or intentionallytransmitted in secondary channels. Encrypting data doesnt guarantee all copies are in cyphertext. Saying that, if a single Twitter developer with proper access leaked dev code or db showing this kind of behavior they would instantly cause a true shitstorm, it's just not worth it and the likelihood is that Twitter is acting in its own interests which is to cater to free speech absolutists.
And if they manage to pull some kind of shenanigans that make it impossible to fully validate the encryption, maybe some kind of signed security module that only runs in the TCM without letting you see what's running on your own computer and sends packets you can't decode for yourself, then that means Twitter is untrustworthy even if you can't prove that it's sending your secrets to a third party. That would be just as big a red flag as if you caught it CCing Elon Musk personally.
The Signal protocol does end-to-end encryption. That means you don't have to trust the middleman, they could be the most evil and corrupt entities in the world and they still couldn't see your messages.
If the middleman manages the key for you, like Twitter is almost certainly going to do, then you're getting spied on while being fed a lie that being spied on isn't possible.
Likewise, it gets decrypted on your target's computer, which should be under his control and not Twitter's.
I expect that he's going to encrypt DMs between twitter and you and between twitter and your conversation partner. But I also expect them to retain the ability to read them at the server level. Keep in mind he said the Signal Protocol, which does not include the at-rest storage.